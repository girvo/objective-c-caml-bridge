// THIS FILE IS GENERATED - ALL CHANGES WILL BE LOST AT THE NEXT BUILD
#include <caml/mlvalues.h>
#include <caml/memory.h>
#include <caml/callback.h>
#import </System/Library/Frameworks/AppKit.framework/Headers/NSPopUpButtonCell.h>
value caml_init_NSPopUpButtonCell(value unit)
{
   CAMLparam0();
   CAMLlocal2(arg1, arg2);
   value *register_class = caml_named_value("register_class");
   value *register_selector = caml_named_value("register_selector");
   arg1 = caml_copy_string("NSPopUpButtonCell");
   arg2 = caml_wrap_id([NSPopUpButtonCell class]);
   caml_callback2(*register_class,arg1,arg2);
   arg1 = caml_copy_string("initTextCell:pullsDown:");
   arg2 = caml_wrap_pointer(@selector(initTextCell:pullsDown:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setMenu:");
   arg2 = caml_wrap_pointer(@selector(setMenu:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("menu:");
   arg2 = caml_wrap_pointer(@selector(menu ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setPullsDown:");
   arg2 = caml_wrap_pointer(@selector(setPullsDown:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("pullsDown:");
   arg2 = caml_wrap_pointer(@selector(pullsDown ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setAutoenablesItems:");
   arg2 = caml_wrap_pointer(@selector(setAutoenablesItems:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("autoenablesItems:");
   arg2 = caml_wrap_pointer(@selector(autoenablesItems ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setPreferredEdge:");
   arg2 = caml_wrap_pointer(@selector(setPreferredEdge:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("preferredEdge:");
   arg2 = caml_wrap_pointer(@selector(preferredEdge ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setUsesItemFromMenu:");
   arg2 = caml_wrap_pointer(@selector(setUsesItemFromMenu:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("usesItemFromMenu:");
   arg2 = caml_wrap_pointer(@selector(usesItemFromMenu ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setAltersStateOfSelectedItem:");
   arg2 = caml_wrap_pointer(@selector(setAltersStateOfSelectedItem:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("altersStateOfSelectedItem:");
   arg2 = caml_wrap_pointer(@selector(altersStateOfSelectedItem ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("addItemWithTitle:");
   arg2 = caml_wrap_pointer(@selector(addItemWithTitle:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("addItemsWithTitles:");
   arg2 = caml_wrap_pointer(@selector(addItemsWithTitles:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("insertItemWithTitle:atIndex:");
   arg2 = caml_wrap_pointer(@selector(insertItemWithTitle:atIndex:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("removeItemWithTitle:");
   arg2 = caml_wrap_pointer(@selector(removeItemWithTitle:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("removeItemAtIndex:");
   arg2 = caml_wrap_pointer(@selector(removeItemAtIndex:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("removeAllItems:");
   arg2 = caml_wrap_pointer(@selector(removeAllItems ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("itemArray:");
   arg2 = caml_wrap_pointer(@selector(itemArray ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("numberOfItems:");
   arg2 = caml_wrap_pointer(@selector(numberOfItems ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("indexOfItem:");
   arg2 = caml_wrap_pointer(@selector(indexOfItem:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("indexOfItemWithTitle:");
   arg2 = caml_wrap_pointer(@selector(indexOfItemWithTitle:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("indexOfItemWithTag:");
   arg2 = caml_wrap_pointer(@selector(indexOfItemWithTag:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("indexOfItemWithRepresentedObject:");
   arg2 = caml_wrap_pointer(@selector(indexOfItemWithRepresentedObject:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("indexOfItemWithTarget:andAction:");
   arg2 = caml_wrap_pointer(@selector(indexOfItemWithTarget:andAction:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("itemAtIndex:");
   arg2 = caml_wrap_pointer(@selector(itemAtIndex:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("itemWithTitle:");
   arg2 = caml_wrap_pointer(@selector(itemWithTitle:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("lastItem:");
   arg2 = caml_wrap_pointer(@selector(lastItem ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("selectItem:");
   arg2 = caml_wrap_pointer(@selector(selectItem:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("selectItemAtIndex:");
   arg2 = caml_wrap_pointer(@selector(selectItemAtIndex:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("selectItemWithTitle:");
   arg2 = caml_wrap_pointer(@selector(selectItemWithTitle:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("selectItemWithTag:");
   arg2 = caml_wrap_pointer(@selector(selectItemWithTag:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setTitle:");
   arg2 = caml_wrap_pointer(@selector(setTitle:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("selectedItem:");
   arg2 = caml_wrap_pointer(@selector(selectedItem ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("indexOfSelectedItem:");
   arg2 = caml_wrap_pointer(@selector(indexOfSelectedItem ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("synchronizeTitleAndSelectedItem:");
   arg2 = caml_wrap_pointer(@selector(synchronizeTitleAndSelectedItem ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("itemTitleAtIndex:");
   arg2 = caml_wrap_pointer(@selector(itemTitleAtIndex:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("itemTitles:");
   arg2 = caml_wrap_pointer(@selector(itemTitles ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("titleOfSelectedItem:");
   arg2 = caml_wrap_pointer(@selector(titleOfSelectedItem ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("attachPopUpWithFrame:inView:");
   arg2 = caml_wrap_pointer(@selector(attachPopUpWithFrame:inView:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("dismissPopUp:");
   arg2 = caml_wrap_pointer(@selector(dismissPopUp ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("performClickWithFrame:inView:");
   arg2 = caml_wrap_pointer(@selector(performClickWithFrame:inView:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("arrowPosition:");
   arg2 = caml_wrap_pointer(@selector(arrowPosition ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setArrowPosition:");
   arg2 = caml_wrap_pointer(@selector(setArrowPosition:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("objectValue:");
   arg2 = caml_wrap_pointer(@selector(objectValue ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setObjectValue:");
   arg2 = caml_wrap_pointer(@selector(setObjectValue:));
   caml_callback2(*register_selector, arg1, arg2);
   CAMLreturn(Val_int(0));
}
