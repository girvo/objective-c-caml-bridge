#include <caml/mlvalues.h>
#include <caml/memory.h>
#include <caml/callback.h>
#import </System/Library/Frameworks/AppKit.framework/Headers/NSWindowController.h>
value caml_init_NSWindowController(value unit)
{
   CAMLparam0();
   CAMLlocal2(arg1, arg2);
   value *register_class = caml_named_value("register_class");
   value *register_selector = caml_named_value("register_selector");
   arg1 = caml_copy_string("NSWindowController");
   arg2 = caml_wrap_id([NSWindowController class]);
   caml_callback2(*register_class,arg1,arg2);
   arg1 = caml_copy_string("initWithWindow:");
   arg2 = caml_wrap_pointer(@selector(initWithWindow:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("initWithWindowNibName:");
   arg2 = caml_wrap_pointer(@selector(initWithWindowNibName:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("initWithWindowNibName:owner:");
   arg2 = caml_wrap_pointer(@selector(initWithWindowNibName:owner:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("initWithWindowNibPath:owner:");
   arg2 = caml_wrap_pointer(@selector(initWithWindowNibPath:owner:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("windowNibName:");
   arg2 = caml_wrap_pointer(@selector(windowNibName ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("windowNibPath:");
   arg2 = caml_wrap_pointer(@selector(windowNibPath ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("owner:");
   arg2 = caml_wrap_pointer(@selector(owner ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setWindowFrameAutosaveName:");
   arg2 = caml_wrap_pointer(@selector(setWindowFrameAutosaveName:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("windowFrameAutosaveName:");
   arg2 = caml_wrap_pointer(@selector(windowFrameAutosaveName ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setShouldCascadeWindows:");
   arg2 = caml_wrap_pointer(@selector(setShouldCascadeWindows:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("shouldCascadeWindows:");
   arg2 = caml_wrap_pointer(@selector(shouldCascadeWindows ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("document:");
   arg2 = caml_wrap_pointer(@selector(document ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setDocument:");
   arg2 = caml_wrap_pointer(@selector(setDocument:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setDocumentEdited:");
   arg2 = caml_wrap_pointer(@selector(setDocumentEdited:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setShouldCloseDocument:");
   arg2 = caml_wrap_pointer(@selector(setShouldCloseDocument:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("shouldCloseDocument:");
   arg2 = caml_wrap_pointer(@selector(shouldCloseDocument ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setWindow:");
   arg2 = caml_wrap_pointer(@selector(setWindow:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("window:");
   arg2 = caml_wrap_pointer(@selector(window ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("synchronizeWindowTitleWithDocumentName:");
   arg2 = caml_wrap_pointer(@selector(synchronizeWindowTitleWithDocumentName ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("windowTitleForDocumentDisplayName:");
   arg2 = caml_wrap_pointer(@selector(windowTitleForDocumentDisplayName:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("close:");
   arg2 = caml_wrap_pointer(@selector(close ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("showWindow:");
   arg2 = caml_wrap_pointer(@selector(showWindow:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("isWindowLoaded:");
   arg2 = caml_wrap_pointer(@selector(isWindowLoaded ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("windowDidLoad:");
   arg2 = caml_wrap_pointer(@selector(windowDidLoad ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("windowWillLoad:");
   arg2 = caml_wrap_pointer(@selector(windowWillLoad ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("loadWindow:");
   arg2 = caml_wrap_pointer(@selector(loadWindow ));
   caml_callback2(*register_selector, arg1, arg2);
   CAMLreturn(Val_int(0));
}
