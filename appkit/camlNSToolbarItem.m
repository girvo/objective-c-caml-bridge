#include <caml/mlvalues.h>
#include <caml/memory.h>
#include <caml/callback.h>
#import </System/Library/Frameworks/AppKit.framework/Headers/NSToolbarItem.h>
value caml_init_NSToolbarItem(value unit)
{
   CAMLparam0();
   CAMLlocal2(arg1, arg2);
   value *register_class = caml_named_value("register_class");
   value *register_selector = caml_named_value("register_selector");
   arg1 = caml_copy_string("NSObject");
   arg2 = caml_wrap_id([NSObject class]);
   caml_callback2(*register_class,arg1,arg2);
   arg1 = caml_copy_string("validateToolbarItem:");
   arg2 = caml_wrap_pointer(@selector(validateToolbarItem:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("NSToolbarItem");
   arg2 = caml_wrap_id([NSToolbarItem class]);
   caml_callback2(*register_class,arg1,arg2);
   arg1 = caml_copy_string("initWithItemIdentifier:");
   arg2 = caml_wrap_pointer(@selector(initWithItemIdentifier:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("itemIdentifier:");
   arg2 = caml_wrap_pointer(@selector(itemIdentifier ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("toolbar:");
   arg2 = caml_wrap_pointer(@selector(toolbar ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setLabel:");
   arg2 = caml_wrap_pointer(@selector(setLabel:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("label:");
   arg2 = caml_wrap_pointer(@selector(label ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setPaletteLabel:");
   arg2 = caml_wrap_pointer(@selector(setPaletteLabel:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("paletteLabel:");
   arg2 = caml_wrap_pointer(@selector(paletteLabel ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setToolTip:");
   arg2 = caml_wrap_pointer(@selector(setToolTip:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("toolTip:");
   arg2 = caml_wrap_pointer(@selector(toolTip ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setMenuFormRepresentation:");
   arg2 = caml_wrap_pointer(@selector(setMenuFormRepresentation:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("menuFormRepresentation:");
   arg2 = caml_wrap_pointer(@selector(menuFormRepresentation ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setTag:");
   arg2 = caml_wrap_pointer(@selector(setTag:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("tag:");
   arg2 = caml_wrap_pointer(@selector(tag ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setTarget:");
   arg2 = caml_wrap_pointer(@selector(setTarget:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("target:");
   arg2 = caml_wrap_pointer(@selector(target ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setAction:");
   arg2 = caml_wrap_pointer(@selector(setAction:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("action:");
   arg2 = caml_wrap_pointer(@selector(action ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setEnabled:");
   arg2 = caml_wrap_pointer(@selector(setEnabled:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("isEnabled:");
   arg2 = caml_wrap_pointer(@selector(isEnabled ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setImage:");
   arg2 = caml_wrap_pointer(@selector(setImage:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("image:");
   arg2 = caml_wrap_pointer(@selector(image ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setView:");
   arg2 = caml_wrap_pointer(@selector(setView:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("view:");
   arg2 = caml_wrap_pointer(@selector(view ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setMinSize:");
   arg2 = caml_wrap_pointer(@selector(setMinSize:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("minSize:");
   arg2 = caml_wrap_pointer(@selector(minSize ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setMaxSize:");
   arg2 = caml_wrap_pointer(@selector(setMaxSize:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("maxSize:");
   arg2 = caml_wrap_pointer(@selector(maxSize ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setVisibilityPriority:");
   arg2 = caml_wrap_pointer(@selector(setVisibilityPriority:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("visibilityPriority:");
   arg2 = caml_wrap_pointer(@selector(visibilityPriority ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("validate:");
   arg2 = caml_wrap_pointer(@selector(validate ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setAutovalidates:");
   arg2 = caml_wrap_pointer(@selector(setAutovalidates:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("autovalidates:");
   arg2 = caml_wrap_pointer(@selector(autovalidates ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("allowsDuplicatesInToolbar:");
   arg2 = caml_wrap_pointer(@selector(allowsDuplicatesInToolbar ));
   caml_callback2(*register_selector, arg1, arg2);
   CAMLreturn(Val_int(0));
}
