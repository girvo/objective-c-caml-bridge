Objective Caml - Objective C Bridge

Main source: http://code.google.com/p/objective-c-caml-bridge/

How to compile
    # build the support library, stub generators for foundation and appkit
    $ make    
    # build the foundation library
    $ make -f Makefile.foundation depend
    $ make -f Makefile.foundation
    # build the appkit library
    $ make -f Makefile.appkit depend
    $ make -f Makefile.appkit 
    # build and run unit tests
    $ make -f tests

What do we do with
     - #if/#endif: HOC ignores them
     one option is to preprocess using cpp and some #defines, and then parse, 
     ignoring whatever #line remains - so let's ignore them
     - .h we don't know how to handle?  HOC processes only AppKit and Foundation

// Callbacks
// Say we have an OCaml object implementing a protocol
// To access it from ObjC, we need 

@implementation Foo : NSObject
{ 
  value o; // the ocaml value with its methods
}
- (return type)selector:(arg_t)arg
{
  caml_callback2(caml_get_public_method(o, hash_variant("selector")), o, (some cast)arg);
  // in general use caml_callbackN
}

value new_Foo(value o) {
      return (value)[Foo new o]
}

// Q: how do we pass these objects to ObjC? how are they typed compared to 
// the native NS objects? - also, how do we implement the NSObject part? 
// let ObjC do it through inheritance
// We can have a generator for these interfaces
