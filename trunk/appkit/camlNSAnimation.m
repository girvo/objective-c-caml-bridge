// THIS FILE IS GENERATED - ALL CHANGES WILL BE LOST AT THE NEXT BUILD
#include <caml/mlvalues.h>
#include <caml/memory.h>
#include <caml/callback.h>
#import </System/Library/Frameworks/AppKit.framework/Headers/NSAnimation.h>
value caml_init_NSAnimation(value unit)
{
   CAMLparam0();
   CAMLlocal2(arg1, arg2);
   value *register_class = caml_named_value("register_class");
   value *register_selector = caml_named_value("register_selector");
   arg1 = caml_copy_string("NSAnimation");
   arg2 = caml_wrap_id([NSAnimation class]);
   caml_callback2(*register_class,arg1,arg2);
   arg1 = caml_copy_string("initWithDuration:animationCurve:");
   arg2 = caml_wrap_pointer(@selector(initWithDuration:animationCurve:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("startAnimation:");
   arg2 = caml_wrap_pointer(@selector(startAnimation ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("stopAnimation:");
   arg2 = caml_wrap_pointer(@selector(stopAnimation ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("isAnimating:");
   arg2 = caml_wrap_pointer(@selector(isAnimating ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("currentProgress:");
   arg2 = caml_wrap_pointer(@selector(currentProgress ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setCurrentProgress:");
   arg2 = caml_wrap_pointer(@selector(setCurrentProgress:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setDuration:");
   arg2 = caml_wrap_pointer(@selector(setDuration:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("duration:");
   arg2 = caml_wrap_pointer(@selector(duration ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("animationBlockingMode:");
   arg2 = caml_wrap_pointer(@selector(animationBlockingMode ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setAnimationBlockingMode:");
   arg2 = caml_wrap_pointer(@selector(setAnimationBlockingMode:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setFrameRate:");
   arg2 = caml_wrap_pointer(@selector(setFrameRate:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("frameRate:");
   arg2 = caml_wrap_pointer(@selector(frameRate ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setAnimationCurve:");
   arg2 = caml_wrap_pointer(@selector(setAnimationCurve:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("animationCurve:");
   arg2 = caml_wrap_pointer(@selector(animationCurve ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("currentValue:");
   arg2 = caml_wrap_pointer(@selector(currentValue ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setDelegate:");
   arg2 = caml_wrap_pointer(@selector(setDelegate:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("delegate:");
   arg2 = caml_wrap_pointer(@selector(delegate ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("progressMarks:");
   arg2 = caml_wrap_pointer(@selector(progressMarks ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setProgressMarks:");
   arg2 = caml_wrap_pointer(@selector(setProgressMarks:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("addProgressMark:");
   arg2 = caml_wrap_pointer(@selector(addProgressMark:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("removeProgressMark:");
   arg2 = caml_wrap_pointer(@selector(removeProgressMark:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("startWhenAnimation:reachesProgress:");
   arg2 = caml_wrap_pointer(@selector(startWhenAnimation:reachesProgress:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("stopWhenAnimation:reachesProgress:");
   arg2 = caml_wrap_pointer(@selector(stopWhenAnimation:reachesProgress:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("clearStartAnimation:");
   arg2 = caml_wrap_pointer(@selector(clearStartAnimation ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("clearStopAnimation:");
   arg2 = caml_wrap_pointer(@selector(clearStopAnimation ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("runLoopModesForAnimating:");
   arg2 = caml_wrap_pointer(@selector(runLoopModesForAnimating ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("NSObject");
   arg2 = caml_wrap_id([NSObject class]);
   caml_callback2(*register_class,arg1,arg2);
   arg1 = caml_copy_string("animationShouldStart:");
   arg2 = caml_wrap_pointer(@selector(animationShouldStart:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("animationDidStop:");
   arg2 = caml_wrap_pointer(@selector(animationDidStop:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("animationDidEnd:");
   arg2 = caml_wrap_pointer(@selector(animationDidEnd:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("animation:valueForProgress:");
   arg2 = caml_wrap_pointer(@selector(animation:valueForProgress:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("animation:didReachProgressMark:");
   arg2 = caml_wrap_pointer(@selector(animation:didReachProgressMark:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("NSViewAnimation");
   arg2 = caml_wrap_id([NSViewAnimation class]);
   caml_callback2(*register_class,arg1,arg2);
   arg1 = caml_copy_string("initWithViewAnimations:");
   arg2 = caml_wrap_pointer(@selector(initWithViewAnimations:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("viewAnimations:");
   arg2 = caml_wrap_pointer(@selector(viewAnimations ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setViewAnimations:");
   arg2 = caml_wrap_pointer(@selector(setViewAnimations:));
   caml_callback2(*register_selector, arg1, arg2);
   CAMLreturn(Val_int(0));
}
