// THIS FILE IS GENERATED - ALL CHANGES WILL BE LOST AT THE NEXT BUILD
#include <caml/mlvalues.h>
#include <caml/memory.h>
#include <caml/callback.h>
#import </System/Library/Frameworks/Foundation.framework/Headers/NSCalendar.h>
value caml_init_NSCalendar(value unit)
{
   CAMLparam0();
   CAMLlocal2(arg1, arg2);
   value *register_class = caml_named_value("register_class");
   value *register_selector = caml_named_value("register_selector");
   arg1 = caml_copy_string("NSCalendar");
   arg2 = caml_wrap_id([NSCalendar class]);
   caml_callback2(*register_class,arg1,arg2);
   arg1 = caml_copy_string("currentCalendar:");
   arg2 = caml_wrap_pointer(@selector(currentCalendar ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("initWithCalendarIdentifier:");
   arg2 = caml_wrap_pointer(@selector(initWithCalendarIdentifier:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("calendarIdentifier:");
   arg2 = caml_wrap_pointer(@selector(calendarIdentifier ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setLocale:");
   arg2 = caml_wrap_pointer(@selector(setLocale:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("locale:");
   arg2 = caml_wrap_pointer(@selector(locale ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setTimeZone:");
   arg2 = caml_wrap_pointer(@selector(setTimeZone:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("timeZone:");
   arg2 = caml_wrap_pointer(@selector(timeZone ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setFirstWeekday:");
   arg2 = caml_wrap_pointer(@selector(setFirstWeekday:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("firstWeekday:");
   arg2 = caml_wrap_pointer(@selector(firstWeekday ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setMinimumDaysInFirstWeek:");
   arg2 = caml_wrap_pointer(@selector(setMinimumDaysInFirstWeek:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("minimumDaysInFirstWeek:");
   arg2 = caml_wrap_pointer(@selector(minimumDaysInFirstWeek ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("minimumRangeOfUnit:");
   arg2 = caml_wrap_pointer(@selector(minimumRangeOfUnit:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("maximumRangeOfUnit:");
   arg2 = caml_wrap_pointer(@selector(maximumRangeOfUnit:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("rangeOfUnit:inUnit:forDate:");
   arg2 = caml_wrap_pointer(@selector(rangeOfUnit:inUnit:forDate:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("ordinalityOfUnit:inUnit:forDate:");
   arg2 = caml_wrap_pointer(@selector(ordinalityOfUnit:inUnit:forDate:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("dateFromComponents:");
   arg2 = caml_wrap_pointer(@selector(dateFromComponents:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("components:fromDate:");
   arg2 = caml_wrap_pointer(@selector(components:fromDate:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("dateByAddingComponents:toDate:options:");
   arg2 = caml_wrap_pointer(@selector(dateByAddingComponents:toDate:options:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("components:fromDate:toDate:options:");
   arg2 = caml_wrap_pointer(@selector(components:fromDate:toDate:options:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("NSDateComponents");
   arg2 = caml_wrap_id([NSDateComponents class]);
   caml_callback2(*register_class,arg1,arg2);
   arg1 = caml_copy_string("era:");
   arg2 = caml_wrap_pointer(@selector(era ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("year:");
   arg2 = caml_wrap_pointer(@selector(year ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("month:");
   arg2 = caml_wrap_pointer(@selector(month ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("day:");
   arg2 = caml_wrap_pointer(@selector(day ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("hour:");
   arg2 = caml_wrap_pointer(@selector(hour ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("minute:");
   arg2 = caml_wrap_pointer(@selector(minute ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("second:");
   arg2 = caml_wrap_pointer(@selector(second ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("week:");
   arg2 = caml_wrap_pointer(@selector(week ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("weekday:");
   arg2 = caml_wrap_pointer(@selector(weekday ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("weekdayOrdinal:");
   arg2 = caml_wrap_pointer(@selector(weekdayOrdinal ));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setEra:");
   arg2 = caml_wrap_pointer(@selector(setEra:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setYear:");
   arg2 = caml_wrap_pointer(@selector(setYear:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setMonth:");
   arg2 = caml_wrap_pointer(@selector(setMonth:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setDay:");
   arg2 = caml_wrap_pointer(@selector(setDay:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setHour:");
   arg2 = caml_wrap_pointer(@selector(setHour:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setMinute:");
   arg2 = caml_wrap_pointer(@selector(setMinute:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setSecond:");
   arg2 = caml_wrap_pointer(@selector(setSecond:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setWeek:");
   arg2 = caml_wrap_pointer(@selector(setWeek:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setWeekday:");
   arg2 = caml_wrap_pointer(@selector(setWeekday:));
   caml_callback2(*register_selector, arg1, arg2);
   arg1 = caml_copy_string("setWeekdayOrdinal:");
   arg2 = caml_wrap_pointer(@selector(setWeekdayOrdinal:));
   caml_callback2(*register_selector, arg1, arg2);
   CAMLreturn(Val_int(0));
}
