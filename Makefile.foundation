# Foundation framework
include mk/Makefile.caml-config

# This tells ocamlfind what packages we depend on
R=
P=Foundation

# Extra flags for compilation and linking
INCS=
COMPFLAGS += $(INCS) -g
LINKFLAGS += $(INCS) -g
DEPFLAGS +=  $(INCS)
CAMLCFLAGS += -g

# This adds the directories for depend generation, includes, linking, snapshot save, clean
$(eval $(call add_dir, support))

# Backup support
# Add files that need to be backed up when doing "make save". Standard .ml* source
# files and C source files (.c, .h), Makefile will be saved by default
SAVED_SUFFIXES+=m
SAVE= $(wildcard mk/Makefile.*) \
      utils/cmosort

DEPEND_FILE:=.depend.foundation

all: foundation.cma

FOUNDATION_LIB=$(wildcard foundation/*.ml)
FOUNDATION_OBJS=$(FOUNDATION_LIB:.ml=.cmo)

# Can't forget the -framework options to make the linker happy later
# cmosort uses the .depend to gather names of .cmo
FOUNDATION_SORTED_OBJS=$(shell utils/cmosort -d $(DEPEND_FILE) foundation) 

foundation.cma:: $(FOUNDATION_SORTED_OBJS)

#	$(MIXEDBYTELIB) -ccopt -g -framework Foundation -lobjc

TARGET_LIBS+=foundation.cma

$(eval $(call add_dir, foundation))

# These includes provide you with all the default rules
-include $(DEPEND_FILE)
include mk/Makefile.caml-common
include mk/Makefile.caml-findlib
include mk/Makefile.caml-rules

# Local Variables:
# mode: Makefile
# compile-command: "make -f Makefile.foundation"
# End:
